<!-- Glass cutting section for project creation -->
<!-- This section handles dynamic creation and display of simple glass cutting entries -->
<div class="bg-white rounded-md border border-gray-200 shadow-sm p-4 mt-7">
    <h2 class="text-base font-semibold mb-4">Vidrios simples</h2>

    <!-- Container for dynamically generated glasscutting table -->
    <div id="glasscuttings-table-container">
      <% if @project.persisted? && @project.glasscuttings.any? %>
        <table class="min-w-full text-xs text-gray-700 border">
          <thead>
            <tr class='bg-gray-50 text-gray-500'>
              <th class='px-4 py-2 text-center'>TIPOLOGIA</th>
              <th class='px-6 py-2 text-center'>TIPO</th>
              <th class='px-4 py-2 text-center'>GROSOR</th>
              <th class='px-4 py-2 text-center'>COLOR</th>
              <th class='px-4 py-2 text-center'>ALTO</th>
              <th class='px-4 py-2 text-center'>ANCHO</th>
              <th class='px-4 py-2 text-center'>PRECIO</th>
              <th class='px-4 py-2 text-center'>ACCIÃ“N</th>
            </tr>
          </thead>
          <tbody id="glasscuttings-table-body">
            <% @project.glasscuttings.each_with_index do |glasscutting, index| %>
              <tr class="divide-x divide-gray-200" data-id="<%= glasscutting.id %>">
                <td class="px-4 py-2 text-center"><%= glasscutting.typology %></td>
                <td class="px-6 py-2 text-center"><%= glasscutting.glass_type %></td>
                <td class="px-4 py-2 text-center"><%= glasscutting.thickness %></td>
                <td class="px-4 py-2 text-center"><%= glasscutting.color %></td>
                <td class="px-4 py-2 text-center"><%= glasscutting.height %></td>
                <td class="px-4 py-2 text-center"><%= glasscutting.width %></td>
                <td class="px-4 py-2 text-center">$<%= number_with_precision(glasscutting.price, precision: 2) %></td>
                <td class="px-4 py-2 text-center">
                  <button type="button" class="text-red-600 hover:text-red-800" 
                          onclick="this.closest('tr').remove(); document.getElementById('glasscuttings-hidden').querySelector('input[value=&quot;<%= glasscutting.id %>&quot;]').parentNode.remove();">
                    <i class="fas fa-trash"></i>
                  </button>
                </td>
              </tr>
              <%= hidden_field_tag "project[glasscuttings_attributes][#{glasscutting.id}][id]", glasscutting.id, id: "glasscuttings_#{glasscutting.id}" %>
              <%= hidden_field_tag "project[glasscuttings_attributes][#{glasscutting.id}][glass_type]", glasscutting.glass_type %>
              <%= hidden_field_tag "project[glasscuttings_attributes][#{glasscutting.id}][thickness]", glasscutting.thickness %>
              <%= hidden_field_tag "project[glasscuttings_attributes][#{glasscutting.id}][height]", glasscutting.height %>
              <%= hidden_field_tag "project[glasscuttings_attributes][#{glasscutting.id}][width]", glasscutting.width %>
              <%= hidden_field_tag "project[glasscuttings_attributes][#{glasscutting.id}][color]", glasscutting.color %>
              <%= hidden_field_tag "project[glasscuttings_attributes][#{glasscutting.id}][typology]", glasscutting.typology %>
              <%= hidden_field_tag "project[glasscuttings_attributes][#{glasscutting.id}][price]", glasscutting.price %>
              <%= hidden_field_tag "project[glasscuttings_attributes][#{glasscutting.id}][_destroy]", "0", id: "glasscuttings_destroy_#{glasscutting.id}" %>
              <script>
                // Add event listener for delete button
                document.addEventListener('click', function(e) {
                  if (e.target.closest('button[onclick*="<%= glasscutting.id %>"]')) {
                    const destroyField = document.getElementById('glasscuttings_destroy_<%= glasscutting.id %>');
                    if (destroyField) {
                      destroyField.value = '1';
                      e.target.closest('tr').style.display = 'none';
                    }
                  }
                });
              </script>
            <% end %>
          </tbody>
        </table>
      <% end %>
    </div>

    <!-- Container for hidden form inputs of confirmed glasscutting entries -->
    <div id="glasscuttings-hidden">
      <% if @project.persisted? %>
        <% @project.glasscuttings.each_with_index do |glasscutting, index| %>
          <%= hidden_field_tag "project[glasscuttings_attributes][#{index}][id]", glasscutting.id, id: "glasscuttings_#{glasscutting.id}" %>
        <% end %>
      <% end %>
    </div>

    <!-- Container for dynamically generated glasscutting entry forms -->
    <div id="glasscuttings-wrapper">
    </div>

    <!-- Button to trigger creation of new glasscutting entry form -->
    <div class="mt-4">
      <%= button_tag "Agregar vidrio simple", type: "button", id: "add-glasscutting", class: "bg-black text-white px-4 py-2 rounded hover:bg-gray-800 transition-colors" %>
    </div>
</div>

<script>
  // This script will run when the page loads
  document.addEventListener('DOMContentLoaded', function() {
    // If there are existing glasscuttings, hide the empty state
    const glasscuttingsTable = document.querySelector('#glasscuttings-table-container table');
    if (glasscuttingsTable) {
      // Table is already rendered with server-side data
      return;
    }
    
    // If no glasscuttings, show the empty state
    const container = document.getElementById('glasscuttings-table-container');
    if (container) {
      container.innerHTML = `
        <div class="text-center py-4 text-gray-500">
          No hay vidrios simples cargados. Agrega uno para comenzar.
        </div>
      ` + container.innerHTML;
    }
  });
  
  // Function to delete a glasscutting
  function deleteGlasscutting(button) {
    const row = button.closest('tr');
    const id = row.dataset.id;
    const hiddenInput = document.getElementById(`glasscuttings_${id}`);
    
    if (hiddenInput) {
      // Mark for destruction instead of removing, in case it's an existing record
      hiddenInput.value = '';
      const destroyInput = document.createElement('input');
      destroyInput.type = 'hidden';
      destroyInput.name = `project[glasscuttings_attributes][${id}][_destroy]`;
      destroyInput.value = '1';
      hiddenInput.parentNode.appendChild(destroyInput);
    }
    
    row.remove();
    
    // If no more glasscuttings, show the empty state
    const tableBody = document.getElementById('glasscuttings-table-body');
    if (tableBody && tableBody.children.length === 0) {
      const container = document.getElementById('glasscuttings-table-container');
      if (container) {
        container.innerHTML = `
          <div class="text-center py-4 text-gray-500">
            No hay vidrios simples cargados. Agrega uno para comenzar.
          </div>
        ` + container.innerHTML;
      }
    }
  }
</script>